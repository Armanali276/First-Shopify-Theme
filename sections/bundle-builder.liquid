<style>
  .bundle-products .title {
    background-color: #eee;
    padding: 15px;
  }
  .group-item img {
    width: 100%;
    display: block;
    object-fit: contain;
    aspect-ratio: 4 / 4;
  }
  .group-item {
    width: calc(100% / 4 - 10px);
  }
  .group-inner {
    gap: 12px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  .item-info {
    text-align: center;
  }
  .item-info * {
    margin: 0;
  }
</style>
<div class="page-width">
  {% for block in section.blocks %}
  <div class="group--{{ forloop.index }} bundle-products">
    <h2 class="title">{{ block.settings.heading }}</h2>
    <div class="group-inner">
      {% for product in collections[block.settings.collection].products %}
        {% assign variant = product.selected_or_first_available_variant %}
        <div class="group-item" data-variantid="{{ variant.id }}">
          <div class="item-image">
            <img src="{{ product.featured_image | img_url: '1000x' }}" width="" height="" loading="lazy" alt="">
          </div>
          <div class="item-info">
            <h2>{{ product.title }}</h2>
            <p>{{ variant.price | money }}</p>
            <button class="button button--secondary">ADD</button>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
  {% endfor %}
  {% comment %} <div class="second-group bundle-producs">
    <h2>Second Group</h2>
    <div class="group-inner">
      {% for product in collections.all.products %}
        {% if product.tags contains 'Group 2' %}
          {% assign variant = product.selected_or_first_available_variant %}
          <div class="group-item" data-variantid="{{ variant.id }}">
            <div class="item-image">
              <img src="{{ product.featured_image | img_url: '1000x' }}" width="" height="" loading="lazy" alt="">
            </div>
            <div class="item-info">
              <h2>{{ product.title }}</h2>
              <p>{{ variant.price | money }}</p>
              <button class="button button--secondary">ADD</button>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div> {% endcomment %}
</div>

<form id="bundles-form">
  <div class="item_ids"></div>
  {% comment %} <div>
    <label for="group-1">Group 1</label>
    <select id="group-1" name="group-1">
    {% for product in collections.all.products %}
      {% if product.tags contains 'Group 1' %}
        {% assign variant = product.selected_or_first_available_variant %}
        <option value="{{ variant.id }}">{{ product.title }} -- {{ variant.price | money }}</option>
      {% endif %}
    {% endfor %}
    </select>
  </div>
  <div>
    <label for="group-2">Group 2</label>
    <select id="group-2" name="group-2">
    {% for product in collections.all.products %}
      {% if product.tags contains 'Group 2' %}
        {% assign variant = product.selected_or_first_available_variant %}
        <option value="{{ variant.id }}">{{ product.title }} -- {{ variant.price | money }}</option>
      {% endif %}
    {% endfor %}
    </select>
  </div> {% endcomment %}
  <button>Submit</button>
</form>
<script>
   document.addEventListener('DOMContentLoaded', () => {

      document.querySelectorAll('.group-item button').forEach(button => {
        button.addEventListener('click', function() {
          if (!this.classList.contains('added')) {
            let newInput = document.createElement('input');
            let variantId = this.closest('.group-item').dataset.variantid;
            newInput.type = 'hidden'; // Make sure the input is hidden
            newInput.name = 'item_ids[]'; // Ensure the input is named correctly
            newInput.value = variantId;
            console.log(newInput);
            document.querySelector('.item_ids').appendChild(newInput);
            this.textContent = 'ADDED';
            this.classList.add('added');
          }
        });
      });

      const form = document.querySelector("#bundles-form");
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const ItemsIds = []
        form.querySelectorAll('.item_ids input').forEach(input => {
          ItemsIds.push(input.value)
        })
        const bundleId = new Date().getTime();
        const items = ItemsIds.map(id => {
          return {
            id: id,
            quantity: 1,
            properties: {
              _bundleId: bundleId
            }
          };
        });
        try {
          const response = await fetch("/cart/add.js", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              items: items
            })
          });

          if (response.ok) {
            window.location.href = '/cart';
          } else {
            console.error('Failed to add items to the cart:', response.statusText);
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
</script>
{% schema %}
  {
    "name": "Bundle Builder",
    "settings": [],
    "blocks": [
      {
        "type": "block",
        "name": "Block",
        "settings": [
          {
            "type": "text",
            "id": "Heading",
            "label": "Title"
          },
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Bundle Builder"
      }
    ]
  }
{% endschema %}