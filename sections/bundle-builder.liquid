<style>
  .group-item img {
    width: 100%;
    display: block;
    object-fit: contain;
    aspect-ratio: 4 / 4;
  }
  .group-item {
    width: calc(100% / 4 - 10px);
  }
  .group-inner {
    gap: 12px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  .item-info {
    text-align: center;
  }
  .item-info * {
    margin: 0;
  }
</style>
<div class="page-width">
  <div class="first-group bundle-producs">
    <h2>First Group</h2>
    <div class="group-inner">
      {% for product in collections.all.products %}
        {% if product.tags contains 'Group 1' %}
          {% assign variant = product.selected_or_first_available_variant %}
          <div class="group-item">
            <div class="item-image">
              <img src="{{ product.featured_image | img_url: '1000x' }}" width="" height="" loading="lazy" alt="">
            </div>
            <div class="item-info">
              <h2>{{ variant.title }}</h2>
              <p>{{ variant.price | money }}</p>
              <button class="button button--secondary">ADD</button>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
  <div class="second-group bundle-producs">
    <h2>Second Group</h2>
    <div class="group-inner">
      {% for product in collections.all.products %}
        {% if product.tags contains 'Group 2' %}
          {% assign variant = product.selected_or_first_available_variant %}
          <div class="group-item">
            <div class="item-image">
              <img src="{{ product.featured_image | img_url: '1000x' }}" width="" height="" loading="lazy" alt="">
            </div>
            <div class="item-info">
              <h2>{{ variant.title }}</h2>
              <p>{{ variant.price | money }}</p>
              <button class="button button--secondary">ADD</button>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

<form id="bundles-form">
  <div>
    <label for="group-1">Group 1</label>
    <select id="group-1" name="group-1">
    {% for product in collections.all.products %}
      {% if product.tags contains 'Group 1' %}
        {% assign variant = product.selected_or_first_available_variant %}
        <option value="{{ variant.id }}">{{ product.title }} -- {{ variant.price | money }}</option>
      {% endif %}
    {% endfor %}
    </select>
  </div>
  <div>
    <label for="group-2">Group 2</label>
    <select id="group-2" name="group-2">
    {% for product in collections.all.products %}
      {% if product.tags contains 'Group 2' %}
        {% assign variant = product.selected_or_first_available_variant %}
        <option value="{{ variant.id }}">{{ product.title }} -- {{ variant.price | money }}</option>
      {% endif %}
    {% endfor %}
    </select>
  </div>
  <button>Submit</button>
</form>
<script>
  document.addEventListener('DOMContentLoaded', () => {
      const form = document.querySelector("#bundles-form");

      form.addEventListener('submit', async (e) => {
        e.preventDefault(); // Prevent the default form submission

        const group1 = document.querySelector("#group-1").value;
        const group2 = document.querySelector("#group-2").value;
        const bundleId = new Date().getTime();

        try {
          const response = await fetch("/cart/add.js", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              items: [
                {
                  id: group1,
                  quantity: 1,
                  properties: {
                    _bundleId: bundleId
                  }
                },
                {
                  id: group2,
                  quantity: 1,
                  properties: {
                    _bundleId: bundleId
                  }
                }
              ]
            })
          });

          if (response.ok) {
            window.location.href = '/cart'; // Redirect to the cart page
          } else {
            console.error('Failed to add items to the cart:', response.statusText);
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
</script>
{% schema %}
  {
    "name": "Bundle Builder",
    "settings": [],
    "presets": [
      {
        "name": "Bundle Builder"
      }
    ]
  }
{% endschema %}